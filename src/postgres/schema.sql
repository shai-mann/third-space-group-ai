-- DB init code - runs every time the app starts up

drop owned by admin;
drop user admin;

create user admin superuser encrypted password 'adminPassword';
grant all privileges on database postgres to admin;

grant all privileges on all tables in schema public to admin;
grant all privileges on all sequences in schema public to admin;

create table if not exists users (
    id uuid DEFAULT gen_random_uuid(),
    email text unique,
    "password" text,
    first_name text,
    last_name text,
    lower_budget integer,
    upper_budget integer,
    primary key (id)
);

create table if not exists hobbies (
    id integer generated by default as identity,
    "name" text,
    min_age integer,
    min_participants integer,
    max_participants integer,
    primary key (id)
);

create table if not exists user_hobbies (
    id integer generated by default as identity,
    "user" uuid,
    hobby integer,
    primary key (id),
    foreign key ("user") references users,
    foreign key (hobby) references hobbies
);

create table if not exists user_friends (
    id integer generated by default as identity,
    "user" uuid,
    friend uuid,
    primary key (id),
    foreign key ("user") references users,
    foreign key (friend) references users
);

create table if not exists groups (
    id integer generated by default as identity,
    conversation int,
    "name" text,
    description text,
    primary key (id),
    foreign key (conversation) references conversations
);

create table if not exists group_members (
    id integer generated by default as identity,
    "user" uuid,
    "group" integer,
    primary key (id),
    foreign key ("user") references users,
    foreign key ("group") references groups
);